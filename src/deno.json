{
  "name": "@fedify/fedify",
  "version": "1.3.0",
  "license": "MIT",
  "exports": {
    ".": "./mod.ts",
    "./federation": "./federation/mod.ts",
    "./nodeinfo": "./nodeinfo/mod.ts",
    "./runtime": "./runtime/mod.ts",
    "./sig": "./sig/mod.ts",
    "./vocab": "./vocab/mod.ts",
    "./webfinger": "./webfinger/mod.ts",
    "./x/denokv": "./x/denokv.ts",
    "./x/fresh": "./x/fresh.ts",
    "./x/hono": "./x/hono.ts",
    "./x/sveltekit": "./x/sveltekit.ts"
  },
  "imports": {
    "@cfworker/json-schema": "npm:@cfworker/json-schema@^2.0.1",
    "@david/which-runtime": "jsr:@david/which-runtime@^0.2.0",
    "@deno/dnt": "jsr:@deno/dnt@0.41.2",
    "@fedify/fedify": "./mod.ts",
    "@fedify/fedify/federation": "./federation/mod.ts",
    "@fedify/fedify/nodeinfo": "./nodeinfo/mod.ts",
    "@fedify/fedify/runtime": "./runtime/mod.ts",
    "@fedify/fedify/sig": "./sig/mod.ts",
    "@fedify/fedify/vocab": "./vocab/mod.ts",
    "@fedify/fedify/webfinger": "./webfinger/mod.ts",
    "@fedify/fedify/x/denokv": "./x/denokv.ts",
    "@fedify/fedify/x/fresh": "./x/fresh.ts",
    "@fedify/fedify/x/hono": "./x/hono.ts",
    "@fedify/fedify/x/sveltekit": "./x/sveltekit.ts",
    "@hongminhee/aitertools": "jsr:@hongminhee/aitertools@^0.6.0",
    "@hugoalh/http-header-link": "jsr:@hugoalh/http-header-link@^1.0.2",
    "@logtape/logtape": "jsr:@logtape/logtape@^0.8.0",
    "@opentelemetry/api": "npm:@opentelemetry/api@^1.9.0",
    "@opentelemetry/semantic-conventions": "npm:@opentelemetry/semantic-conventions@^1.27.0",
    "@phensley/language-tag": "npm:@phensley/language-tag@^1.9.0",
    "@std/assert": "jsr:@std/assert@^0.226.0",
    "@std/async": "jsr:@std/async@^1.0.5",
    "@std/bytes": "jsr:@std/bytes@^1.0.2",
    "@std/collections": "jsr:@std/collections@^1.0.6",
    "@std/encoding": "jsr:@std/encoding@^1.0.5",
    "@std/fs": "jsr:@std/fs@^1.0.3",
    "@std/http": "jsr:@std/http@^1.0.6",
    "@std/path": "jsr:@std/path@^1.0.6",
    "@std/semver": "jsr:@std/semver@^1.0.3",
    "@std/testing": "jsr:@std/testing@^0.224.0",
    "@std/text": "jsr:@std/text@^1.0.6",
    "@std/url": "jsr:@std/url@^0.225.1",
    "@std/yaml": "jsr:@std/yaml@^0.224.3",
    "asn1js": "npm:asn1js@^3.0.5",
    "fast-check": "npm:fast-check@^3.22.0",
    "json-canon": "npm:json-canon@^1.0.1",
    "jsonld": "npm:jsonld@^8.3.2",
    "mock_fetch": "jsr:@hongminhee/deno-mock-fetch@^0.3.2",
    "multibase": "npm:multibase@^4.0.6",
    "multicodec": "npm:multicodec@^3.2.1",
    "pkijs": "npm:pkijs@^3.2.4",
    "uri-template-router": "npm:uri-template-router@^0.0.16",
    "url-template": "npm:url-template@^3.1.1"
  },
  "include": [
    "vocab/vocab.ts"
  ],
  "exclude": [
    ".git/",
    ".github/",
    ".vscode/",
    ".zed/",
    "apidoc/",
    "cli/",
    "codegen/schema.yaml",
    "docs/",
    "examples/",
    "logo.svg",
    "dist/",
    "npm/",
    "vocab/*.yaml",
    "!vocab/vocab.ts"
  ],
  "tasks": {
    "cache": "deno task codegen && deno cache mod.ts",
    "check": "deno task codegen && deno fmt --check && deno lint && deno check */*.ts",
    "codegen": "deno run --allow-read --allow-write --check codegen/main.ts vocab/ ../runtime/ > vocab/vocab.ts && deno fmt vocab/vocab.ts && deno cache vocab/vocab.ts && deno check vocab/vocab.ts",
    "test-without-codegen": "deno test --check --doc --allow-read --allow-write --allow-env --unstable-kv --trace-leaks",
    "test": "deno task codegen && deno task test-without-codegen",
    "coverage": "rm -rf coverage/ && deno task test --coverage && deno coverage --html coverage",
    "bench": "deno task codegen && deno bench --allow-read --allow-write --allow-net --allow-env --allow-run --unstable-kv",
    "apidoc": "deno task codegen && deno doc --html --name=Fedify --output=apidoc/ mod.ts",
    "check-version": "deno run ../cli/scripts/check_version.ts",
    "publish": "deno task codegen && deno publish",
    "dnt-without-codegen": "deno run -A dnt.ts",
    "dnt": "deno task codegen && deno task dnt-without-codegen",
    "test-all": "deno task check && deno task test-without-codegen && deno task dnt-without-codegen && cd npm/ && bun run ./test_runner.js && cd ../",
    "update": "deno run --allow-env --allow-read --allow-write=. --allow-run=git,deno --allow-net=jsr.io,registry.npmjs.org jsr:@molt/cli ./*.ts",
    "update:commit": "deno task -q update --commit --pre-commit=fmt,lint",
    "hooks:install": "deno run --allow-read=deno.json,.git/hooks/ --allow-write=.git/hooks/ jsr:@hongminhee/deno-task-hooks",
    "hooks:pre-commit": "deno task check && deno task check-version"
  },
  "unstable": [
    "kv",
    "temporal"
  ],
  "lock": false
}
